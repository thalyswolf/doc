swagger: "2.0"
info:
  description: "Api para fazer checkout"
  version: "1.0.0"
  title: "Checkout"
  contact:
    email: "contato@mail.cc"

host: "localhost"

tags:
- name: "Checkout"
  description: "API de checkout"

schemes:
- "https"
- "http"
paths:
  /checkout:
    post:
      tags:
      - "Checkout"
      summary: "Criar uma fatura de checkout"
      description: "Usado para criar uma fatura que pode ser paga por API ou por nossa interface de fatura (paymentLink)"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Request para criação de cobrança"
        required: true
        schema:
          $ref: "#/definitions/Checkout"
      responses:
        "200": 
          description: Resposta
          schema:
            $ref: "#/response/CheckoutResponse"
        "400":
          description: "Dados de INPUT inválido"
        "500":
          description: "Server internal error"
  /checkout/read/{checkoutId}:
    get:
      tags:
      - "Checkout"
      summary: "Consultar um checkout"
      description: "Usado para consultar um checkout"
      parameters:
      - name: "checkoutId"
        in: "path"
        description: "Consultar dados do checkout"
        required: true
        type: "string"
      responses:
        "200": 
          description: Resposta
          schema:
            $ref: "#/response/ReadCheckoutResponse"
        "404":
          description: "Checkout não encontrado"
        "500":
          description: "Server internal error"
  /checkout/card-payment:
    post:
      tags:
      - "Checkout"
      summary: "Pagar um checkout com cartão"
      description: "API para efetuar o pagamento do check-out com cartão"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Request para criação de cobrança"
        required: true
        schema:
          $ref: "#/definitions/CardPayment"
      responses:
        "200": 
          description: Resposta
          schema:
            $ref: "#/response/CardPaymentResponse"
            
        "400":
          description: "Dados de INPUT inválido"
        "412":
          description: "Checkout já pago | Checkout já cancelado | Checkout ainda está sendo processado | Checkout está em contestação | Quantidade de parcelas excede o limite pré-definido"
        "500":
          description: "Server internal error"

  /vehicle/consult-debit-async:
    post:
      tags:
      - Débitos veiculadores
      summary: "Criar uma consulta de débitos"
      description: "Essa consulta é assincrona, porém se os dados já estiverem disponíveis, retornaremos os dados nessa request"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Corpo da request"
        required: true
        schema:
          $ref: "#/definitions/VehicularDebitSearchAsync"
      responses:
        "200": 
          description: Resposta
          schema:
            $ref: "#/response/ConsultAsyncResponse"
        "400": 
          description: Dados inválidos
        "500":
          description: Erro interno

  /vehicle/status-consult/{consultToken}:
    get:
      tags:
      - Débitos veiculadores
      summary: "Consultar o status de uma consulta"
      description: "Usado para consultar se a consuta já está pront"
      parameters:
      - name: "consultToken"
        in: "path"
        required: true
        type: "string"
      responses:
        "200": 
          description: Resposta
          schema:
            $ref: "#/response/ConsultStatusResponse"
  
  /vehicle/consult-detail/{consultToken}:
    get:
      tags:
      - Débitos veiculadores
      summary: "Consultar os detalhes da consulta"
      description: "Usado para consultar os dados de uma consulta já pronta"
      parameters:
      - name: "consultToken"
        in: "path"
        required: true
        type: "string"
      responses:
        "200": 
          description: Resposta
          schema:
            $ref: "#/response/ConsultDetailResponse"
        "404": 
          description: Débito nao encontrado
        "412": 
          description: Débito ainda está processando 
        "500": 
          description: Erro interno
        
  /checkout-change-status:
    post:
      tags:
      - "Notificação Webhook"
      summary: "Notificar a alteração do status de um checkout"
      description: "Notificamos a alteração do status de um checkout"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Secret"
        in: "header"
        description: "notificationSecret que foi fornecido na criação do checkout"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "Corpo da request que enviamos"
        required: true
        schema:
          $ref: "#/definitions/Webhook"
          
      responses:
        "200": 
          description: Resposta
  
  /payment-vehicular-debit-change-status:
    post:
      tags:
      - "Notificação Webhook"
      summary: "Notificar a alteração no pagamento de um débito veicular"
      description: "Notificamos a alteração do status de um pagamento de dédito veicular"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "Secret"
        in: "header"
        description: "notificationSecret que foi fornecido na criação do checkout"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "Corpo da request que enviamos"
        required: true
        schema:
          $ref: "#/definitions/WebhookVehicularDebit"
      responses:
        "200": 
          description: Resposta
          
  /vehicle/payment-debit:
    post:
      tags:
      - Débitos veiculadores
      summary: "Pagar débitos"
      description: "Pagar os débitos veiculares <br> <b>Para gerar atualizar o documento é necessário pagar todos os débitos que estão marcados como required</b>"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Corpo da request"
        required: true
        schema:
          $ref: "#/definitions/PaymentVehicleDebit"
      responses:
        "200": 
          description: Resposta
          schema:
            $ref: "#/response/PaymentVehicleDebitResponse"
        "400": 
          description: Dados inválidos
        "404": 
          description: Pagamento nao encontrado
        "500":
          description: Erro interno
          
  /vehicle/payment-debit/receipt/{paymentId}:
    get:
      tags:
      - Débitos veiculadores
      summary: "Consultar o recibo de um pagamento"
      description: "Usado para consultar os dados de uma consulta já pronta"
      parameters:
      - name: "paymentId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200": 
          description: Resposta
          schema:
            $ref: "#/response/GetReceiptResponse"
        "404": 
          description: Pagamento nao encontrado
        "412": 
          description: Pagamento ainda não está pago ou foi rejeitado, portanto não tem recibo
        "500": 
          description: Erro interno
response:
  CardPaymentResponse:
    type: "object"
    required:
      - id
      - checkoutId
      - status
    properties:
      id:
        type: "string"
        description: "ID do pagamento"
      checkoutId:
        type: "string"
        description: "ID do checkout"
      paidAmount:
        type: "integer"
        description: "Valor pago em centavos, só será retornado em caso de checkout aprovado"
      status:
        type: string
        description: "Status do pagamento"
        enum:
          - pending_payment
          - processing
          - paid
          - refunded
          - rejected
          - canceled
          - in_dispute  
      
  GetReceiptResponse:
    type: "object"
    required:
      - receipt
    properties:
      receipt:
        type: string
        description: Recibo no formato de PDF em Base64
  
  ReadCheckoutResponse:
    type: "object"
    required:
      - id
      - amount
      - maxInstallments
      - qrCode
      - qrCodeJPEGBase64
      - status
    properties:
      id:
        type: "string"
        description: "ID do checkout"
      amount:
        type: "integer"
        description: "Valor em centavos, exemplo R$10,00 = 1000"
        format: "int64"
      minInstallments:
        type: "integer"
        description: "Define um limite minimo de parcelas que nossa API permitirá pagamento, o parcelamento só funcionará em caso de pagamento com cartão, pois o pagamento via PIX sempre será a vista"
        minimum: 1
      maxInstallments:
        type: "integer"
        description: "Define um limite máximo de parcelas que nossa API permitirá pagamento, o parcelamento só funcionará em caso de pagamento com cartão, pois o pagamento via PIX sempre será a vista"
        minimum: 1
      qrCode:
        type: "string"
        description: "Conteúdo do QRCode"
      qrCodeJPEGBase64:
        type: "string"
        description: "Imagem (JPEG) do QRCode em Base64"
      status:
        type: string
        description: "Status do pagamento"
        enum:
          - pending_payment
          - processing
          - paid
          - refunded
          - rejected
          - canceled
          - in_dispute
      
  CheckoutResponse:
    type: "object"
    required:
      - id
      - paymentLink
      - qrCode
      - qrCodeJPEGBase64
    properties:
      id:
        type: "string"
        description: "ID do checkout"
      paymentLink:
        type: "string"
        description: "Link da fatura"
      qrCode:
        type: "string"
        description: "Conteúdo do QRCode"
      qrCodeJPEGBase64:
        type: "string"
        description: "Imagem (JPEG) do QRCode em Base64"
  
  ConsultStatusResponse:
    type: "object"
    required:
      - status
    properties:
      status:
        type: "string"
        description: "Status da consulta"
        enum:
          - processing
          - finished
          - expired
          
  ConsultDetailResponse:
    type: "object"
    required:
      - plate
      - debits
    properties:
      plate:
        type: "string"
        description: "Placa do veículo"
      debits:
        type: array
        description: "Débitos dos veículos"
        items:
          $ref: "#/response/DebitResponse"
          
  ConsultAsyncResponse:
    type: "object"
    required:
      - tokenConsult
    properties:
      tokenConsult:
        type: "string"
        description: "Token usado para a consulta dos dados"
      debits:
        type: array
        description: "Se os dados já estiverem disponíveis, será retornado nessa request, caso contrário retornará no somente quando a consulta estiver finalizada"
        items:
          $ref: "#/response/DebitResponse"
  
  PaymentVehicleDebitResponse:
    type: "object"
    properties:
      id:
        type: 'string'
        description: 'ID do pagamento (Será usado no webhook para notificar alterações)'
  
  
  DebitResponse:
    type: "object"
    properties:
      title:
        type: "string"
        description: "Titulo do débito"
      amount:
        type: "integer"
        description: "Valor do débito em centavos"
      description:
        type: "string"
        description: "Descrição do débito"
      dueDate:
        type: "string"
        description: "data de vencimento do débito"
        example: "2022-05-18 00:00:00"
      fine:
        type: "integer"
        description: "Multa por atraso em centavos"
      interest:
        type: "integer"
        description: "Juros em centavos"
      discount:
        type: "integer"
        description: "Desconto em centavos"
      type:
        type: "string"
        description: "tipo de débito"
        enum:
          - services
          - ticket
          - renainf_ticket
          - ipva
          - licensing
          - ipva_unique
          - ipva_installment
          - insurance
          - expired_insurance
      year:
        type: "string"
        description: "Ano de referência do débito"
      totalAmount:
        type: "integer"
        description: "Valor total dos débitos"
      required:
        type: "boolean"
        description: "Se débito é necessário ser pago para gerar novo document"


definitions:
  CardPayment:
    type: "object"
    required:
      - cardHolder
      - installments
      - cardToken
      - payerEmail
      - payerDocument
    properties:
      checkoutId:
        type: string
        description: ID o checkout (Se enviar null, será criado um novo checkout)
      amount:
        type: "integer"
        description: "Valor em centavos, exemplo R$10,00 = 1000 (Obrigatório se o checkoutId for null)"
        format: "int64"
      notificationUrl:
        type: "string"
        description: "É a URL onde notificaremos alteração do status da fatura (Obrigatório se o checkoutId for null)"
      notificationSecret:
        type: "string"
        description: "Enviaremos esse valor no HEADER da notificação para que seja confimardo a nossa autenticidade na notificação (Obrigatório se o checkoutId for null)"
      cardHolder:
        type: string
        description: Nome que está no cartão
      installments:
        type: integer
        description: Quantidade de parcelas (Não pode ser maior que o maxInstallments passado na criação)
        minimum: 1
      cardToken:
        type: string
        description: Token do cartão gerado com a SDK
      payerEmail:
        type: string
        description: E-mail do pagador
      payerDocument:
        type: string
        description: CPF/CNPJ do pagador
  
  PaymentVehicleDebit:
    type: object
    required:
      - token
      - checkoutId
      - notificationUrl
      - notificationSecret
      - debits
    properties:
      token: 
        type: "string"
        description: "Token gerado na consulta"
      checkoutId:
        type: "string"
        description: "ID do checkount de cobrança (serve apenas como um rastreio)"
      notificationUrl:
        type: "string"
        description: "É a URL onde notificaremos alteração do status da fatura"
      notificationSecret:
        type: "string"
        description: "Enviaremos esse valor no HEADER da notificação para que seja confimardo a nossa autenticidade na notificação"
      debits:
        type: array
        description: Array de ID dos débitos que deseja pagar
        items:
          type: integer
      
      
  
  VehicularDebitSearchAsync:
    type: object
    required:
    - uf
    - plate
    - renavam
    properties:
      uf:
        type: "string"
        description: "Sigla do estado"
        minLength: 2
        maxLength: 2
        example: "SP"
      plate:
        type: "string"
        description: "Placa do veículo"
      renavam:
        type: "string"
        description: "Renavam do veículo"
  
  WebhookVehicularDebit:
    type: "object"
    required:
    - "id"
    - "status"
    - "action"
    properties:
      id:
        type: string
        description: ID do pagamento
      status:
        type: string
        description: Status do pagamento
        enum:
          - processing
          - paid
          - rejected
      statusDetail:
        type: string
        description: Detalhe da rejeição
      action:
        type: string
        description: Ação
        enum:
          - payment_update
          - checkout_update
      receipt:
        type: string 
        description: PDF do recibo em base64
  
  Webhook:
    type: "object"
    required:
    - "checkoutId"
    - "status"
    - "action"
    properties:
      checkoutId:
        type: "string"
        description: "Id do checkout"
      refundAmount:
        type: "integer"
        description: "Em caso de estorno é retornado o valor da devolução"
        format: "int64"
      paidAmount:
        type: "integer"
        description: "Valor pago em centavos, só será retornado em caso de checkout aprovado"
      status:
        type: "string"
        description: "Novo status"
        enum:
          - pending_payment
          - processing
          - paid
          - refunded
          - rejected
          - canceled
          - in_dispute
      action:
        type: string
        description: Ação
        enum:
          - payment_update
          - checkout_update
        
  Checkout:
    type: "object"
    required:
    - "amount"
    - "maxInstallments"
    - "notificationUrl"
    - "notificationSecret"
    - "payer"
    properties:
      amount:
        type: "integer"
        description: "Valor em centavos, exemplo R$10,00 = 1000"
        format: "int64"
      description:
        type: "string"
        description: "Descrição da cobrança"
      minInstallments:
        type: "integer"
        description: "Define um limite minimo de parcelas que nossa API permitirá pagamento, o parcelamento só funcionará em caso de pagamento com cartão, pois o pagamento via PIX sempre será a vista"
        minimum: 1
      maxInstallments:
        type: "integer"
        description: "Define um limite máximo de parcelas que nossa API permitirá pagamento, o parcelamento só funcionará em caso de pagamento com cartão, pois o pagamento via PIX sempre será a vista"
        minimum: 1
      notificationUrl:
        type: "string"
        description: "É a URL onde notificaremos alteração do status da fatura"
      notificationSecret:
        type: "string"
        description: "Enviaremos esse valor no HEADER da notificação para que seja confimardo a nossa autenticidade na notificação"
      payer:
        $ref: "#/definitions/Payer"
        
  Payer:
    type: "object"
    required:
    - "name"
    - "email"
    - "document"
    - "address"
    properties:
      name:
        type: string
        description: nome de quem está realizando o pagamento
      email:
        type: string
        description: email do pagador
      document:
        type: string
        description: CPF/CNPJ de quem está realizando o pagamento
      address:
        $ref: "#/definitions/Address"
  Address:
    type: object
    required:
    - streetName
    - streetNumber
    - zipcode
    - neighborhood
    - city
    - uf
    properties:
      streetName: 
        type: "string"
        description: "nome da rua"
      streetNumber: 
        type: "string"
        description: "Numéro"
      zipcode: 
        type: "string"
        description: "CEP"
      neighborhood: 
        type: "string"
        description: "Bairro"
      city: 
        type: "string"
        description: "Nome da cidade"
      uf: 
        type: "string"
        example: SP
        description: "Sigla do estado"
        minLength: 2
        maxLength: 2
